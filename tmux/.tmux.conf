#******************************************************************************
# Basic Setup
#******************************************************************************

set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# enable colors
set -g default-terminal "screen-256color"

# add True Color support
set -ga terminal-overrides ",xterm-256color:Tc"

setw -g xterm-keys on
set -s focus-events on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout

# GNU-Screen compatible prefix
set -g prefix2 C-f
bind C-f send-prefix -2
unbind C-b

set -q -g status-utf8 on
setw -q -g utf8 on

# increase history
set -g history-limit 10000

# key mapping to reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

#******************************************************************************
# Display Settings
#******************************************************************************

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-screen

# activity
set -g monitor-activity on
set -g visual-activity off

# pane config
set -g pane-border-style fg=colour241
set -g pane-active-border-style fg=blue
set -g status-position bottom

# set color scheme
set -g status-style fg=blue,bg=colour8
set -g window-status-activity-style fg=red,bg=black
set -g status-left-length 52
set -g status-right "%b %d, %Y %H:%M "
set -g status-right-length 100
set -g window-status-format "#[fg=colour248,bg=colour8]#I #[fg=colour248]#W "
set -g window-status-current-format "#[fg=blue,bg=colour8]#I #[fg=blue,bg=colour8]#W #F "
# command/message line colors
set -g message-style fg=white,bg=colour0

#******************************************************************************
# Pane Navigation
#******************************************************************************

# create a new window
bind N new-window

# next/previous window
bind n next-window
bind p previous-window

# no confirm on kill-pane
bind x kill-pane

# move window order with Ctrl-Shift-Left/Right
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

# split current window horizontally
bind - split-window -v
# split current window vertically
bind | split-window -h

# Use vi movement when switching panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# switch on mouse navigation
setw -g mouse on

#******************************************************************************
# Clipboard Configuration
#******************************************************************************

# bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# # copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# # copy to X11 clipboard
# if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
# if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# choose which buffer to paste from
bind P choose-buffer


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
